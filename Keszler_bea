import tkinter as tk
from tkinter import messagebox

class ToDoList:
    def __init__(self):
        # Inicializálja a teendők listáját.
        self.teendok = []

    def hozzaad(self, teendo):
        # Hozzáad egy új teendőt a listához.
        if teendo:
            self.teendok.append(teendo)

    def torles(self, index):
        # Törli a kiválasztott teendőt a listából.
        if 0 <= index < len(self.teendok):
            del self.teendok[index]

    def mentes(self, file_path):
        # Mentés a fájlba
        with open(file_path, 'w') as file:
            for teendo in self.teendok:
                file.write(teendo + '\n')

    def betoltes(self, file_path):
        # Betöltés a fájlból
        with open(file_path, 'r') as file:
            self.teendok = [line.strip() for line in file]

class ToDoListApp:
    def __init__(self, root):
        # Inicializálja az alkalmazást és a GUI-t.
        self.root = root
        self.to_do_list = ToDoList()

        # Beviteli mező a teendő hozzáadásához
        self.entry = tk.Entry(root, width=30, font=("Arial", 14))
        self.entry.grid(row=0, column=0, padx=10, pady=10)

        # Gomb a teendő hozzáadásához
        self.addButton = tk.Button(root, text="Hozzáadás", command=self.hozzaad,
                                   font=("Arial", 12), bg="#008080", fg="white")
        self.addButton.grid(row=0, column=1, padx=10, pady=10)

        # Listbox a teendők megjelenítéséhez
        self.listbox = tk.Listbox(root, selectbackground="#FFD700", selectmode=tk.SINGLE, width=30, height=10,
                                  font=("Arial", 12), bg="#FFFFE0", fg="#333333", borderwidth=0,
                                  highlightthickness=0)
        self.listbox.grid(row=1, column=0, columnspan=2, padx=10, pady=10)

        # Gomb a teendő törléséhez
        self.torlesButton = tk.Button(root, text="Törlés", command=self.torles,
                                      font=("Arial", 12), bg="#FF4500", fg="white")
        self.torlesButton.grid(row=2, column=0, padx=10, pady=10)

        # Gomb a teendők mentéséhez
        self.mentesButton = tk.Button(root, text="Mentés", command=self.mentes,
                                      font=("Arial", 12), bg="#4CAF50", fg="white")
        self.mentesButton.grid(row=2, column=1, padx=10, pady=10)

    def hozzaad(self):
        # Hozzáadja a beírt teendőt a listához
        teendo = self.entry.get()
        self.to_do_list.hozzaad(teendo)
        self.frissit_listbox()

    def torles(self):
        # Törli a kiválasztott teendőt a listából
        selected_index = self.listbox.curselection()
        if selected_index:
            self.to_do_list.torles(selected_index[0])
            self.frissit_listbox()

    def mentes(self):
        # Mentés a fájlba és felugró ablak megjelenítése
        file_path = "teendok.txt"
        self.to_do_list.mentes(file_path)
        messagebox.showinfo("Mentés", f"A teendők sikeresen el lettek mentve a következő fájlba: {file_path}")

    def frissit_listbox(self):
        # Frissíti a Listbox-ot az új teendőkkel
        self.listbox.delete(0, tk.END)
        for teendo in self.to_do_list.teendok:
            self.listbox.insert(tk.END, teendo)

def main():
    # Főprogram
    root = tk.Tk()
    app = ToDoListApp(root)
    root.mainloop()

# Innen indul a program
if __name__ == "__main__":
    main()
